struct Color {
	r, g, b uint8
} cases {
	struct Rgb
	red = (255, 0, 0)
	green = (0, 255, 0)
	blue = (0, 0, 255)
}

struct Array<Element type, count usize> {
	elements [count]Element
}




pub module animals
import {
	std.io.print_line,
}

pub trait Animal {
	pub name string
	pub age uint32
}

pub method make_noise(animal &Animal)

pub struct Dog {
	embed Animal
	pub tag string
}

pub struct Cat {
	embed Animal
	pub breed string
}

pub func make_noise(dog &Dog) {
	print_line("woof")
}

pub func make_noise(cat &Cat) {
	print_line("meow")
}

pub func main() {
	var pet mut &Animal = &Dog()
	make_noise(pet)
	pet = &Cat()
	pet->make_noise()
}




pub module physics
import {
	std.math,
	std.operations,
}

pub struct Entity {
	pub position, velocity, acceleration Vector
} cases {
	struct Circle {pub radius float64}
	struct Mesh {pub vertices owned []Vector}
}

pub method update(entity &Entity)

pub struct Vector {
	embed std.operations.To<string>, .Arithmetic
	pub x, y, z float64
}

pub func update(circle &Circle)

pub func update(mesh &Mesh)
